plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.chukapoka'
version = '0.0.1-SNAPSHOT'

java {
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 웹 애플리케이션을 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'


	// 개발 중에만 필요한 의존성 (예: 빌드 재시작 등)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트를 위한 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Lombok 라이브러리를 사용하기 위한 의존성
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation("org.springframework.boot:spring-boot-starter-validation")

	// PostgreSQL JDBC 드라이버 의존성
//	runtimeOnly 'org.postgresql:postgresql'
	// h2
		runtimeOnly 'com.h2database:h2'


	// Spring Security 사용 시 필요한 의존성
	implementation("org.springframework.boot:spring-boot-starter-security")

	// JWT 사용 시 필요한 의존성
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

	// Email 인증번호 의존성
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.2'

	// enable production
	implementation ("org.springframework.boot:spring-boot-starter-actuator")

	// modelmapper
	implementation 'org.modelmapper:modelmapper:2.4.4'
}


tasks.named('test') {
	useJUnitPlatform()
}
